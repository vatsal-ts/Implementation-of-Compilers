TOKEN:	single line COMMENT
TOKEN:	INT
type_specifier
TOKEN:	IDENTIFIER
TOKEN:	PARENTHESISOPEN
TOKEN:	INT
type_specifier
TOKEN:	PARENTHESISCLOSE
parameter_declaration
parameter_list
direct_declarator
declarator
TOKEN:	SEMICOLON
init_declarator
declaration
external_declaration
TOKEN:	INT
type_specifier
TOKEN:	IDENTIFIER
TOKEN:	PARENTHESISOPEN
TOKEN:	INT
type_specifier
TOKEN:	PARENTHESISCLOSE
parameter_declaration
parameter_list
direct_declarator
declarator
TOKEN:	SEMICOLON
init_declarator
declaration
external_declaration
TOKEN:	INT
type_specifier
TOKEN:	IDENTIFIER
TOKEN:	PARENTHESISOPEN
TOKEN:	INT
type_specifier
TOKEN:	IDENTIFIER
parameter_declaration
parameter_list
TOKEN:	PARENTHESISCLOSE
direct_declarator
declarator
TOKEN:	CURBOPEN
TOKEN:	RETURN
TOKEN:	PARENTHESISOPEN
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	MODULO
unary_expression
multiplicative_expression
TOKEN:	INTEGER_CONSTANT
primary_expression
primary_expression
TOKEN:	EQUALITY
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
TOKEN:	INTEGER_CONSTANT
primary_expression
primary_expression
TOKEN:	PARENTHESISCLOSE
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
expression
primary_expression
primary_expression
TOKEN:	TERNARY_OP
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISOPEN
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISCLOSE
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
argument_expression_list
postfix_expression
TOKEN:	COLON
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
expression
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISOPEN
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISCLOSE
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
argument_expression_list
postfix_expression
TOKEN:	SEMICOLON
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
conditional_expression
assignment_expression
expression
jump_statement
statement
block_item
block_item_list
TOKEN:	CURBCLOSE
compound_statement
function_definition
external_declaration
TOKEN:	INT
type_specifier
TOKEN:	IDENTIFIER
TOKEN:	PARENTHESISOPEN
TOKEN:	INT
type_specifier
TOKEN:	IDENTIFIER
parameter_declaration
parameter_list
TOKEN:	PARENTHESISCLOSE
direct_declarator
declarator
TOKEN:	CURBOPEN
TOKEN:	RETURN
TOKEN:	PARENTHESISOPEN
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	EQUALITY
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
TOKEN:	INTEGER_CONSTANT
primary_expression
primary_expression
TOKEN:	PARENTHESISCLOSE
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
expression
primary_expression
primary_expression
TOKEN:	TERNARY_OP
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
TOKEN:	INTEGER_CONSTANT
primary_expression
primary_expression
TOKEN:	COLON
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
expression
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISOPEN
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	SUB
unary_expression
multiplicative_expression
additive_expression
TOKEN:	INTEGER_CONSTANT
primary_expression
primary_expression
TOKEN:	PARENTHESISCLOSE
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
argument_expression_list
postfix_expression
TOKEN:	ADD
unary_expression
multiplicative_expression
additive_expression
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISOPEN
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	SUB
unary_expression
multiplicative_expression
additive_expression
TOKEN:	INTEGER_CONSTANT
primary_expression
primary_expression
TOKEN:	PARENTHESISCLOSE
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
argument_expression_list
postfix_expression
TOKEN:	SEMICOLON
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
conditional_expression
assignment_expression
expression
jump_statement
statement
block_item
block_item_list
TOKEN:	CURBCLOSE
compound_statement
function_definition
external_declaration
TOKEN:	INT
type_specifier
TOKEN:	IDENTIFIER
TOKEN:	PARENTHESISOPEN
TOKEN:	INT
type_specifier
TOKEN:	IDENTIFIER
parameter_declaration
parameter_list
TOKEN:	PARENTHESISCLOSE
direct_declarator
declarator
TOKEN:	CURBOPEN
TOKEN:	RETURN
TOKEN:	PARENTHESISOPEN
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	EQUALITY
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
TOKEN:	INTEGER_CONSTANT
primary_expression
primary_expression
TOKEN:	PARENTHESISCLOSE
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
expression
primary_expression
primary_expression
TOKEN:	TERNARY_OP
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
TOKEN:	INTEGER_CONSTANT
primary_expression
primary_expression
TOKEN:	COLON
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
expression
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISOPEN
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	SUB
unary_expression
multiplicative_expression
additive_expression
TOKEN:	INTEGER_CONSTANT
primary_expression
primary_expression
TOKEN:	PARENTHESISCLOSE
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
argument_expression_list
postfix_expression
TOKEN:	ADD
unary_expression
multiplicative_expression
additive_expression
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISOPEN
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	SUB
unary_expression
multiplicative_expression
additive_expression
TOKEN:	INTEGER_CONSTANT
primary_expression
primary_expression
TOKEN:	PARENTHESISCLOSE
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
argument_expression_list
postfix_expression
TOKEN:	SEMICOLON
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
conditional_expression
assignment_expression
expression
jump_statement
statement
block_item
block_item_list
TOKEN:	CURBCLOSE
compound_statement
function_definition
external_declaration
TOKEN:	INT
type_specifier
TOKEN:	IDENTIFIER
TOKEN:	PARENTHESISOPEN
TOKEN:	PARENTHESISCLOSE
direct_declarator
declarator
TOKEN:	CURBOPEN
TOKEN:	INT
type_specifier
TOKEN:	IDENTIFIER
TOKEN:	ASSIGNMENT
direct_declarator
declarator
TOKEN:	INTEGER_CONSTANT
primary_expression
primary_expression
TOKEN:	SEMICOLON
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
initializer
init_declarator
declaration
block_item
block_item_list
TOKEN:	INT
type_specifier
TOKEN:	IDENTIFIER
TOKEN:	SEMICOLON
direct_declarator
declarator
init_declarator
declaration
block_item
block_item_list
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	ASSIGNMENT
unary_expression
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISOPEN
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISCLOSE
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
argument_expression_list
postfix_expression
TOKEN:	SEMICOLON
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
assignment_expression
expression
expression_statement
statement
block_item
block_item_list
TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISOPEN
"TOKEN:	IDENTIFIER
primary_expression
primary_expression
TOKEN:	PARENTHESISOPEN
"TOKEN:	PARENTHESISCLOSE
postfix_expression
TOKEN:	SEMICOLON
unary_expression
multiplicative_expression
additive_expression
relational_expression
equality_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
argument_expression_list
ERROR is syntax errorreset();
ERROR is ;reset();
Line Number isreset(); 1